# JMH version: 1.21
# VM version: JDK 10.0.2, Java HotSpot(TM) 64-Bit Server VM, 10.0.2+13
# VM invoker: C:\Program Files\Java\jdk-10.0.2\bin\java.exe
# VM options: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:25912,suspend=y,server=n -javaagent:C:\Users\rodri\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6262.58\plugins\java\lib\rt\debugger-agent.jar -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 1000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: br.com.viavarejo.RedisBenchmark.jedisSimpleGet

# Run progress: 0.00% complete, ETA 00:02:12
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: <failure>

redis.clients.jedis.exceptions.JedisConnectionException: All sentinels down, cannot determine where is mymaster master is running...
	at redis.clients.jedis.JedisSentinelPool.initSentinels(JedisSentinelPool.java:180)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:95)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:82)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:70)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:44)
	at br.com.viavarejo.RedisConnectionManagement.createJedisConnection(RedisConnectionManagement.java:160)
	at br.com.viavarejo.RedisConnectionManagement.getJedisConnection(RedisConnectionManagement.java:177)
	at br.com.viavarejo.RedisConnectionManagement.createJedisCommands(RedisConnectionManagement.java:182)
	at br.com.viavarejo.RedisBenchmark.setup(RedisBenchmark.java:30)
	at br.com.viavarejo.generated.RedisBenchmark_jedisSimpleGet_jmhTest._jmh_tryInit_f_redisbenchmark0_0(RedisBenchmark_jedisSimpleGet_jmhTest.java:334)
	at br.com.viavarejo.generated.RedisBenchmark_jedisSimpleGet_jmhTest.jedisSimpleGet_Throughput(RedisBenchmark_jedisSimpleGet_jmhTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:844)


# JMH version: 1.21
# VM version: JDK 10.0.2, Java HotSpot(TM) 64-Bit Server VM, 10.0.2+13
# VM invoker: C:\Program Files\Java\jdk-10.0.2\bin\java.exe
# VM options: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:25912,suspend=y,server=n -javaagent:C:\Users\rodri\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6262.58\plugins\java\lib\rt\debugger-agent.jar -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 1000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: br.com.viavarejo.RedisBenchmark.jedisSimpleSet

# Run progress: 8.33% complete, ETA 00:11:13
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: <failure>

redis.clients.jedis.exceptions.JedisConnectionException: All sentinels down, cannot determine where is mymaster master is running...
	at redis.clients.jedis.JedisSentinelPool.initSentinels(JedisSentinelPool.java:180)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:95)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:82)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:70)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:44)
	at br.com.viavarejo.RedisConnectionManagement.createJedisConnection(RedisConnectionManagement.java:160)
	at br.com.viavarejo.RedisConnectionManagement.getJedisConnection(RedisConnectionManagement.java:177)
	at br.com.viavarejo.RedisConnectionManagement.createJedisCommands(RedisConnectionManagement.java:182)
	at br.com.viavarejo.RedisBenchmark.setup(RedisBenchmark.java:30)
	at br.com.viavarejo.generated.RedisBenchmark_jedisSimpleSet_jmhTest._jmh_tryInit_f_redisbenchmark0_0(RedisBenchmark_jedisSimpleSet_jmhTest.java:334)
	at br.com.viavarejo.generated.RedisBenchmark_jedisSimpleSet_jmhTest.jedisSimpleSet_Throughput(RedisBenchmark_jedisSimpleSet_jmhTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:844)


# JMH version: 1.21
# VM version: JDK 10.0.2, Java HotSpot(TM) 64-Bit Server VM, 10.0.2+13
# VM invoker: C:\Program Files\Java\jdk-10.0.2\bin\java.exe
# VM options: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:25912,suspend=y,server=n -javaagent:C:\Users\rodri\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6262.58\plugins\java\lib\rt\debugger-agent.jar -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 1000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: br.com.viavarejo.RedisBenchmark.lettuceSimpleAsyncGet

# Run progress: 16.67% complete, ETA 00:05:06
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: <failure>

redis.clients.jedis.exceptions.JedisConnectionException: All sentinels down, cannot determine where is mymaster master is running...
	at redis.clients.jedis.JedisSentinelPool.initSentinels(JedisSentinelPool.java:180)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:95)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:82)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:70)
	at redis.clients.jedis.JedisSentinelPool.<init>(JedisSentinelPool.java:44)
	at br.com.viavarejo.RedisConnectionManagement.createJedisConnection(RedisConnectionManagement.java:160)
	at br.com.viavarejo.RedisConnectionManagement.getJedisConnection(RedisConnectionManagement.java:177)
	at br.com.viavarejo.RedisConnectionManagement.createJedisCommands(RedisConnectionManagement.java:182)
	at br.com.viavarejo.RedisBenchmark.setup(RedisBenchmark.java:30)
	at br.com.viavarejo.generated.RedisBenchmark_lettuceSimpleAsyncGet_jmhTest._jmh_tryInit_f_redisbenchmark0_0(RedisBenchmark_lettuceSimpleAsyncGet_jmhTest.java:334)
	at br.com.viavarejo.generated.RedisBenchmark_lettuceSimpleAsyncGet_jmhTest.lettuceSimpleAsyncGet_Throughput(RedisBenchmark_lettuceSimpleAsyncGet_jmhTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:844)


# JMH version: 1.21
# VM version: JDK 10.0.2, Java HotSpot(TM) 64-Bit Server VM, 10.0.2+13
# VM invoker: C:\Program Files\Java\jdk-10.0.2\bin\java.exe
# VM options: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:25912,suspend=y,server=n -javaagent:C:\Users\rodri\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6262.58\plugins\java\lib\rt\debugger-agent.jar -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 1000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: br.com.viavarejo.RedisBenchmark.lettuceSimpleAsyncSet

# Run progress: 25.00% complete, ETA 00:03:03
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 